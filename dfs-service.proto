syntax = "proto3";

package dfs_service;

service DFSService {

    // Add your service calls here

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server
    rpc storeFile(stream FileChunk) returns (ResponseStatus){}

    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server
    rpc fetchFile(FilePath) returns (stream FileChunk){}

    // 3. REQUIRED (Parts 1 & 2): A method to list all files on the server
    rpc listFiles(ListFilesRequest) returns (LSResponse){}

    // 4. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server
    rpc statusFile(FilePath) returns (FileStatus){}

    // 5. REQUIRED (Part 2 only): A method to request a write lock from the server
    rpc requestLock(LockerInfo) returns (ResponseStatus){}

    // 6. REQUIRED (Part 2 only): A method named CallbackList to handle asynchronous file listing requests
    //                            from a client. This method should return a listing of files along with their
    //                            attribute information. The expected attribute information should include name,
    //                            size, modified time, and creation time.
    rpc CallbackList(ListFilesRequest) returns (LSResponse){}

    // 7. REQUIRED (Part 2 only): A method to delete a file from the server
    rpc deleteFile(FilePath) returns (ResponseStatus){}

    // 8. An rpc to release the file lock in server
    rpc releaseLock(LockerInfo) returns (ResponseStatus){}

    // 9. An rpc to compare the file among local and server 
    rpc compareFile(FileCRC) returns (compareRes){}

}

// Add your message types here
message FileChunk{
    bytes content = 1;
    // chunk_num is for debug, not necessary in real world
    int32 chunk_num = 2;
}

message ResponseStatus{
    string descStatus = 1;
}

message FilePath{
    string path = 1;
}

message ListFilesRequest{
    //empty
    string name = 1;
}

message FileInfo{
    string fileName = 1;
    int64 modified_time = 2;
    uint32 crc = 3;
}

message LSResponse{
    repeated FileInfo filesInfoList = 1;
}

message FileStatus{
    int64 size = 1;
    int64 modified_time = 2;
    int64 creation_time = 3;
}

message FileCRC{
    string filename = 1;
    uint32 crc = 2;
}

message compareRes{
    bool same = 1;
}

message LockerInfo{
    string path = 1;
    string clientId = 2;
}
